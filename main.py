from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from config import BOT_TOKEN
from exchange import get_exchange_rate
from promo_codes import apply_promo_code

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –±–æ—Ç–∞
dp = Dispatcher()

# –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def main_menu():
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("üí± –û–±–º–µ–Ω", callback_data="exchange"))
    keyboard.add(InlineKeyboardButton("üí∞ –ë–∞–ª–∞–Ω—Å", callback_data="balance"))
    keyboard.add(InlineKeyboardButton("üéÅ –ü—Ä–æ–º–æ–∫–æ–¥", callback_data="promo_code"))
    keyboard.add(InlineKeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info"))
    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def start(message: Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Crypto Exchange Bot!", reply_markup=main_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏
@dp.callback_query()
async def handle_callback_query(callback_query: CallbackQuery):
    data = callback_query.data

    if data == "exchange":
        await callback_query.message.answer("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∏ –≤–∞–ª—é—Ç—É –¥–ª—è –æ–±–º–µ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 100 BTC):")
    elif data == "balance":
        await callback_query.message.answer("–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: 0.00 USD")  # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
    elif data == "promo_code":
        await callback_query.message.answer("–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥:")
    elif data == "info":
        await callback_query.message.answer("–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±–º–µ–Ω–∏–≤–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã, –ø—Ä–æ–≤–µ—Ä—è—Ç—å –±–∞–ª–∞–Ω—Å –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥—ã.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–æ–±–º–µ–Ω –∏ –ø—Ä–æ–º–æ–∫–æ–¥—ã)
@dp.message()
async def handle_text(message: Message):
    text = message.text.strip().split()
    
    if len(text) == 2:
        # –û–±–º–µ–Ω –≤–∞–ª—é—Ç
        try:
            amount = float(text[0])
            currency = text[1].upper()
            rate = get_exchange_rate(currency)
            result = amount * rate
            await message.answer(f"{amount} {currency} = {result:.2f} USD")
        except Exception as e:
            await message.answer("–û—à–∏–±–∫–∞: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≤–∞–ª—é—Ç–∞.")
    elif len(text) == 1:
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
        promo_code = text[0].upper()
        discount = apply_promo_code(100, promo_code)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º 100 –∫–∞–∫ —Ç–µ—Å—Ç–æ–≤—É—é —Å—É–º–º—É
        if discount < 100:
            await message.answer(f"–ü—Ä–æ–º–æ–∫–æ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω! –í–∞—à–∞ —Å–∫–∏–¥–∫–∞: {100 - discount:.2f} USD")
        else:
            await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥.")
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.")

async def main():
    # –ó–∞–ø—É—Å–∫ –æ–ø—Ä–æ—Å–∞, –ø–µ—Ä–µ–¥–∞–≤–∞—è —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
